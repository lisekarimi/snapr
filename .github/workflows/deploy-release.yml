name: Deploy GitHub Release

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Type "deploy" to confirm deployment'
        required: true
        default: ''
  workflow_call:
    inputs:
      confirm_deployment:
        description: 'Type "deploy" to confirm deployment'
        type: string
        required: true
    outputs:
      changelog:
        description: "Changelog content for current version"
        value: ${{ jobs.extract_changelog.outputs.changelog }}

jobs:
  setup:
    uses: ./.github/workflows/deploy-setup.yml
    with:
      confirm_deployment: ${{ inputs.confirm_deployment }}
    secrets: inherit

  create_release:
    needs: setup
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract changelog for current version
        id: extract_changelog
        run: |
          VERSION="${{ needs.setup.outputs.version }}"
          echo "Extracting changelog for version: $VERSION"

          if [ ! -f CHANGELOG.md ]; then
            echo "::error::CHANGELOG.md not found"
            exit 1
          fi

          VERSION_REGEX=$(echo "$VERSION" | sed 's/\./\\./g')

          awk "/^## \[${VERSION_REGEX}\]$/ {found=1; next}
              /^## \[/ && found {exit}
              found && NF > 0 {print}" CHANGELOG.md > extracted_changelog.md

          if [ ! -s extracted_changelog.md ]; then
            echo "::warning::No changelog found for version $VERSION"
            echo "No changelog found for version $VERSION." > extracted_changelog.md
          fi

          echo "Extracted changelog content:"
          echo "================================"
          echo "CHANGELOG.md content: $(head -5 CHANGELOG.md)"
          echo "================================"

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat extracted_changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.version }}
          name: ${{ needs.setup.outputs.version }}
          body: ${{ steps.extract_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "Successfully created GitHub Release for version ${{ needs.setup.outputs.version }}"
          echo "- GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.setup.outputs.version }}"
